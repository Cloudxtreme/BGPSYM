%!PS-Adobe-2.0 EPSF-2.0
%%Title: conv_pol_70,flapD=80,iValue=10000,iN=1500,sleep=121000,flapP=65.eps
%%Creator: gnuplot 4.2 patchlevel 2 
%%CreationDate: Thu Aug 21 16:32:20 2008
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (conv_pol_70,flapD=80,iValue=10000,iN=1500,sleep=121000,flapP=65.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 2 )
  /Author (Maciej Wojciechowski,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Thu Aug 21 16:32:20 2008)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
714 420 M
6248 0 V
stroke
LTb
714 420 M
63 0 V
6185 0 R
-63 0 V
630 420 M
( 0) Rshow
1.000 UL
LTb
1.000 UL
LTa
714 840 M
6248 0 V
stroke
LTb
714 840 M
63 0 V
6185 0 R
-63 0 V
630 840 M
( 0.1) Rshow
1.000 UL
LTb
1.000 UL
LTa
714 1260 M
6248 0 V
stroke
LTb
714 1260 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
( 0.2) Rshow
1.000 UL
LTb
1.000 UL
LTa
714 1680 M
6248 0 V
stroke
LTb
714 1680 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
( 0.3) Rshow
1.000 UL
LTb
1.000 UL
LTa
714 2100 M
6248 0 V
stroke
LTb
714 2100 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
( 0.4) Rshow
1.000 UL
LTb
1.000 UL
LTa
714 2520 M
4673 0 V
1491 0 R
84 0 V
stroke
LTb
714 2520 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
( 0.5) Rshow
1.000 UL
LTb
1.000 UL
LTa
714 2940 M
6248 0 V
stroke
LTb
714 2940 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
( 0.6) Rshow
1.000 UL
LTb
1.000 UL
LTa
714 3360 M
6248 0 V
stroke
LTb
714 3360 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
( 0.7) Rshow
1.000 UL
LTb
1.000 UL
LTa
714 3780 M
6248 0 V
stroke
LTb
714 3780 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
( 0.8) Rshow
1.000 UL
LTb
1.000 UL
LTa
714 4200 M
6248 0 V
stroke
LTb
714 4200 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
( 0.9) Rshow
1.000 UL
LTb
1.000 UL
LTa
714 4620 M
6248 0 V
stroke
LTb
714 4620 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
( 1) Rshow
1.000 UL
LTb
1.000 UL
LTa
714 420 M
0 4200 V
stroke
LTb
714 420 M
0 63 V
0 4137 R
0 -63 V
714 280 M
( 0) Cshow
1.000 UL
LTb
1.000 UL
LTa
1755 420 M
0 4200 V
stroke
LTb
1755 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
( 30) Cshow
1.000 UL
LTb
1.000 UL
LTa
2797 420 M
0 4200 V
stroke
LTb
2797 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
( 60) Cshow
1.000 UL
LTb
1.000 UL
LTa
3838 420 M
0 4200 V
stroke
LTb
3838 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
( 90) Cshow
1.000 UL
LTb
1.000 UL
LTa
4879 420 M
0 4200 V
stroke
LTb
4879 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
( 120) Cshow
1.000 UL
LTb
1.000 UL
LTa
5921 420 M
0 1890 V
0 420 R
0 1890 V
stroke
LTb
5921 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
( 150) Cshow
1.000 UL
LTb
1.000 UL
LTa
6962 420 M
0 4200 V
stroke
LTb
6962 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
( 180) Cshow
1.000 UL
LTb
1.000 UL
LTb
714 4620 N
714 420 L
6248 0 V
0 4200 V
-6248 0 V
Z stroke
LCb setrgbcolor
140 2520 M
currentpoint gsave translate 90 rotate 0 0 M
(Cumulative percentage of events) Cshow
grestore
LTb
LCb setrgbcolor
3838 70 M
(Relative convergence delay in seconds) Cshow
LTb
3838 4830 M
(Beacons 1,2,3 in the Simulator) Cshow
1.000 UP
1.000 UL
LTb
1.000 UL
LT2
5387 2310 N
0 420 V
1491 0 V
0 -420 V
-1491 0 V
Z stroke
5387 2730 M
1491 0 V
1.000 UP
stroke
LT0
LTb
5387 2660 M
(Beacon1_ANN) Lshow
LT0
714 649 Pls
714 687 Pls
714 725 Pls
714 764 Pls
714 802 Pls
714 840 Pls
749 878 Pls
749 916 Pls
749 955 Pls
749 993 Pls
749 1031 Pls
783 1069 Pls
783 1107 Pls
818 1145 Pls
818 1184 Pls
818 1222 Pls
818 1260 Pls
818 1298 Pls
818 1336 Pls
818 1375 Pls
818 1413 Pls
853 1451 Pls
853 1489 Pls
853 1565 Pls
853 1604 Pls
853 1642 Pls
888 1680 Pls
888 1718 Pls
888 1756 Pls
888 1795 Pls
888 1833 Pls
957 1871 Pls
957 1909 Pls
957 1947 Pls
992 1985 Pls
1026 2024 Pls
1061 2062 Pls
1061 2100 Pls
1061 2138 Pls
1061 2215 Pls
1061 2253 Pls
1061 2291 Pls
1061 2367 Pls
1096 2482 Pls
1165 2520 Pls
1165 2558 Pls
1200 2596 Pls
1200 2635 Pls
1235 2673 Pls
1235 2711 Pls
1235 2749 Pls
1269 2787 Pls
1304 2825 Pls
1339 2864 Pls
1408 2902 Pls
1443 2940 Pls
1478 2978 Pls
1582 3016 Pls
1582 3055 Pls
1616 3093 Pls
1616 3131 Pls
1686 3169 Pls
1721 3207 Pls
1721 3245 Pls
1755 3284 Pls
1755 3322 Pls
1790 3360 Pls
1790 3398 Pls
1790 3436 Pls
1825 3475 Pls
1825 3513 Pls
1825 3551 Pls
1825 3589 Pls
1859 3627 Pls
1894 3665 Pls
1964 3704 Pls
1964 3742 Pls
1964 3780 Pls
1964 3818 Pls
2033 3856 Pls
2033 3895 Pls
2033 3933 Pls
2068 3971 Pls
2137 4009 Pls
2172 4047 Pls
2172 4085 Pls
2172 4124 Pls
2241 4162 Pls
2241 4200 Pls
2311 4238 Pls
2311 4276 Pls
2345 4315 Pls
2380 4353 Pls
2519 4391 Pls
2762 4429 Pls
2797 4467 Pls
2797 4505 Pls
2831 4544 Pls
3144 4582 Pls
3178 4620 Pls
3248 4620 Pls
6594 2660 Pls
1.000 UP
1.000 UL
LT1
LTb
5387 2520 M
(Beacon2_ANN) Lshow
LT1
714 649 Crs
783 687 Crs
818 725 Crs
853 764 Crs
853 840 Crs
853 878 Crs
888 916 Crs
888 955 Crs
888 993 Crs
888 1031 Crs
888 1069 Crs
922 1145 Crs
922 1184 Crs
957 1222 Crs
957 1260 Crs
957 1336 Crs
957 1375 Crs
957 1413 Crs
957 1451 Crs
992 1489 Crs
992 1565 Crs
992 1604 Crs
992 1642 Crs
992 1680 Crs
992 1756 Crs
992 1795 Crs
1026 1833 Crs
1061 1909 Crs
1061 1947 Crs
1061 1985 Crs
1061 2024 Crs
1096 2100 Crs
1131 2138 Crs
1165 2176 Crs
1165 2215 Crs
1165 2291 Crs
1165 2329 Crs
1165 2367 Crs
1165 2405 Crs
1269 2444 Crs
1304 2482 Crs
1304 2520 Crs
1304 2558 Crs
1339 2596 Crs
1339 2635 Crs
1374 2673 Crs
1374 2749 Crs
1374 2787 Crs
1408 2825 Crs
1478 2864 Crs
1616 2902 Crs
1721 2940 Crs
1721 2978 Crs
1755 3016 Crs
1825 3055 Crs
1825 3093 Crs
1894 3131 Crs
1929 3169 Crs
1929 3207 Crs
1929 3245 Crs
1929 3284 Crs
1929 3322 Crs
1964 3360 Crs
1964 3398 Crs
1964 3436 Crs
1964 3475 Crs
1964 3513 Crs
1964 3551 Crs
1998 3589 Crs
1998 3627 Crs
1998 3665 Crs
1998 3704 Crs
2033 3742 Crs
2033 3780 Crs
2033 3818 Crs
2033 3856 Crs
2068 3895 Crs
2068 3933 Crs
2068 3971 Crs
2068 4009 Crs
2102 4047 Crs
2102 4085 Crs
2137 4124 Crs
2137 4162 Crs
2172 4200 Crs
2172 4238 Crs
2172 4276 Crs
2172 4315 Crs
2207 4353 Crs
2207 4391 Crs
2241 4429 Crs
2241 4467 Crs
2276 4505 Crs
2380 4544 Crs
2450 4582 Crs
2484 4620 Crs
2727 4620 Crs
6594 2520 Crs
1.000 UP
1.000 UL
LT2
LTb
5387 2380 M
(Beacon3_ANN) Lshow
LT2
714 649 Star
818 725 Star
818 764 Star
818 840 Star
888 878 Star
888 916 Star
888 1069 Star
957 1107 Star
992 1145 Star
1026 1184 Star
1026 1298 Star
1026 1336 Star
1026 1375 Star
1026 1413 Star
1061 1451 Star
1061 1489 Star
1096 1527 Star
1096 1565 Star
1096 1604 Star
1131 1642 Star
1165 1680 Star
1200 1718 Star
1200 1756 Star
1235 1795 Star
1304 1833 Star
1339 1871 Star
1408 1909 Star
1443 1947 Star
1443 1985 Star
1443 2024 Star
1478 2062 Star
1478 2100 Star
1512 2138 Star
1547 2176 Star
1547 2215 Star
1547 2253 Star
1582 2291 Star
1582 2329 Star
1582 2367 Star
1582 2405 Star
1616 2482 Star
1616 2520 Star
1651 2558 Star
1651 2596 Star
1651 2635 Star
1651 2673 Star
1651 2711 Star
1686 2749 Star
1686 2787 Star
1686 2825 Star
1686 2864 Star
1686 2902 Star
1721 2940 Star
1755 2978 Star
1755 3016 Star
1755 3055 Star
1755 3093 Star
1790 3131 Star
1790 3169 Star
1790 3207 Star
1825 3245 Star
1825 3284 Star
1825 3322 Star
1859 3360 Star
1859 3398 Star
1859 3436 Star
1894 3475 Star
1894 3513 Star
1894 3551 Star
1929 3589 Star
1929 3627 Star
1929 3665 Star
1964 3704 Star
1998 3742 Star
1998 3780 Star
1998 3818 Star
2068 3856 Star
2068 3895 Star
2102 3933 Star
2102 3971 Star
2137 4009 Star
2172 4047 Star
2207 4085 Star
2207 4124 Star
2241 4162 Star
2276 4200 Star
2276 4238 Star
2380 4276 Star
2588 4315 Star
2658 4353 Star
2693 4391 Star
2866 4429 Star
2936 4467 Star
2970 4505 Star
2970 4544 Star
3005 4582 Star
3040 4620 Star
6594 2380 Star
1.000 UL
LTb
714 4620 N
714 420 L
6248 0 V
0 4200 V
-6248 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
